package main

import "gl"
import "glfw"

import "constants_pkg"
import "image_pkg"
import "layer_pkg"
import "screen_pkg"

func main () {
  glfw.Init()
  glfw.WindowHint(glfw.Resizable, glfw.False)

  glfw.CreateWindow("window", constants_pkg.SCREEN_WIDTH, constants_pkg.SCREEN_HEIGHT, "Image Example")
  glfw.MakeContextCurrent("window")

  gl.Init()
  gl.Enable(gl.BLEND)
  gl.BlendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)

  var program i32
  program = gl.CreateProgram()
  gl.LinkProgram(program)


  var main_layer layer_pkg.Layer
  main_layer = layer_pkg.newLayer("main layer", 0.0, 0.0, constants_pkg.SCREEN_WIDTH, constants_pkg.SCREEN_HEIGHT, true, true)
  main_layer = layer_pkg.addImageToLayer(image_pkg.newImage("background", 0.0, 0.0, constants_pkg.SCREEN_WIDTH, constants_pkg.SCREEN_HEIGHT, "textures/background.jpg"), main_layer)

  main_layer = layer_pkg.addImageToLayer(image_pkg.newImage("skycoin logo", 0.0, 0.0, constants_pkg.LOGO_WIDTH, constants_pkg.LOGO_HEIGHT, "textures/logo.png"), main_layer)

  var screen screen_pkg.Screen
  screen = screen_pkg.newScreen("main screen", constants_pkg.SCREEN_WIDTH, constants_pkg.SCREEN_HEIGHT)
  screen = screen_pkg.addLayerToScreen(main_layer, screen)

  for bool.not(glfw.ShouldClose("window")) {
    gl.ClearColor(0.0, 0.0, 0.0, 1.0)
		gl.Clear(gl.COLOR_BUFFER_BIT)

		gl.LoadIdentity()
		gl.Enable(gl.TEXTURE_2D)
		gl.Translatef(0.0, 0.0, 0.0)

    screen_pkg.renderScreen(screen)

    glfw.PollEvents()
		glfw.SwapBuffers("window")
  }
}
